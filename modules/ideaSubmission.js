/**
 * √ñtlet bek√ºld≈ë rendszer modul
 * Kezeli az √∂tletek fogad√°s√°t √©s tov√°bb√≠t√°s√°t
 */

const { EmbedBuilder } = require('discord.js');
const config = require('../config.json');

module.exports = {
    /**
     * √ñtlet bek√ºld√©s kezel√©se
     * @param {Message} message - Az eredeti √ºzenet
     */
    async handleIdeaSubmission(message) {
        try {
            // √ñtlet sz√∂veg kinyer√©se (prefix elt√°vol√≠t√°sa)
            const ideaText = message.content.slice(config.prefix.length).trim();
            
            // Ellen≈ërizz√ºk, hogy van-e sz√∂veg
            if (!ideaText) {
                await message.reply('‚ùå K√©rlek adj meg egy √∂tletet a parancs ut√°n!\n**Haszn√°lat:** `' + config.prefix + ' Itt az √∂tleted`');
                return;
            }

            // Sz√∂veg hossz ellen≈ërz√©se
            if (ideaText.length > 2000) {
                await message.reply('‚ùå Az √∂tlet t√∫l hossz√∫! Maximum 2000 karakter lehet.');
                return;
            }

            // Ellen≈ërizz√ºk a csatorna konfigur√°ci√≥t
            if (!config.ideaSubmission.channelId || config.ideaSubmission.channelId === 'YOUR_IDEA_CHANNEL_ID_HERE') {
                await message.reply('‚ùå Az √∂tlet csatorna nincs be√°ll√≠tva.');
                console.error('‚ùå Idea submission channel nincs be√°ll√≠tva a config.json-ban');
                return;
            }

            // Keress√ºk meg az √∂tlet csatorn√°t
            const ideaChannel = await message.client.channels.fetch(config.ideaSubmission.channelId).catch(() => null);
            if (!ideaChannel) {
                await message.reply('‚ùå Az √∂tlet csatorna nem tal√°lhat√≥.');
                console.error(`‚ùå Idea channel nem tal√°lhat√≥: ${config.ideaSubmission.channelId}`);
                return;
            }

            // √ñtlet embed l√©trehoz√°sa
            const embed = new EmbedBuilder()
                .setTitle(config.ideaSubmission.embed.title)
                .setDescription(ideaText)
                .setColor(config.ideaSubmission.embed.color)
                .setAuthor({ 
                    name: message.author.tag, 
                    iconURL: message.author.displayAvatarURL() 
                })
                .setFooter({ text: config.ideaSubmission.embed.footer })
                .setTimestamp();

            // √ñtlet k√ºld√©se a megadott csatorn√°ba
            const postedMessage = await ideaChannel.send({ embeds: [embed] });

            // Reakci√≥k hozz√°ad√°sa
            for (const reaction of config.ideaSubmission.reactions) {
                try {
                    await postedMessage.react(reaction);
                } catch (reactionError) {
                    console.error(`‚ùå Hiba a reakci√≥ hozz√°ad√°sa sor√°n (${reaction}):`, reactionError);
                }
            }

            // Meger≈ës√≠t≈ë √ºzenet k√ºld√©se a felhaszn√°l√≥nak
            await message.reply(config.ideaSubmission.confirmMessage);

            // Logging
            if (config.logging.enabled && config.logging.events.ideaSubmit) {
                await this.logIdeaSubmission(message.guild, message.author, ideaText, postedMessage);
            }

            console.log(`üí° √ñtlet bek√ºldve: ${message.author.tag} - "${ideaText.substring(0, 50)}..."`);

        } catch (error) {
            console.error('‚ùå Hiba az √∂tlet bek√ºld√©se sor√°n:', error);
            
            try {
                await message.reply('‚ùå Hiba t√∂rt√©nt az √∂tlet bek√ºld√©se sor√°n. K√©rlek pr√≥b√°ld √∫jra k√©s≈ëbb.');
            } catch (replyError) {
                console.error('‚ùå Nem siker√ºlt v√°laszolni az √ºzenetre:', replyError);
            }
        }
    },

    /**
     * √ñtlet bek√ºld√©s napl√≥z√°sa
     * @param {Guild} guild - Discord szerver
     * @param {User} user - Felhaszn√°l√≥
     * @param {string} ideaText - √ñtlet sz√∂vege
     * @param {Message} postedMessage - Elk√ºld√∂tt √ºzenet
     */
    async logIdeaSubmission(guild, user, ideaText, postedMessage) {
        try {
            if (!config.logging.channelId || config.logging.channelId === 'YOUR_LOG_CHANNEL_ID_HERE') {
                return;
            }

            const logChannel = guild.channels.cache.get(config.logging.channelId);
            if (!logChannel) return;

            const embed = new EmbedBuilder()
                .setTitle('üí° √öj √∂tlet bek√ºldve')
                .addFields(
                    { name: 'üë§ Felhaszn√°l√≥', value: `<@${user.id}> (${user.tag})`, inline: true },
                    { name: 'üìù √ñtlet', value: ideaText.length > 100 ? ideaText.substring(0, 100) + '...' : ideaText, inline: false },
                    { name: 'üîó Link', value: `[Ugr√°s az √∂tlethez](${postedMessage.url})`, inline: true }
                )
                .setColor('#FF9900')
                .setTimestamp();

            await logChannel.send({ embeds: [embed] });

        } catch (error) {
            console.error('‚ùå Hiba az √∂tlet log k√ºld√©se sor√°n:', error);
        }
    },

    /**
     * √ñtlet statisztik√°k lek√©r√©se (opcion√°lis funkci√≥)
     * @param {Guild} guild - Discord szerver
     * @param {User} user - Felhaszn√°l√≥ (opcion√°lis, specifikus felhaszn√°l√≥ statisztik√°i)
     * @returns {Object} Statisztik√°k objektum
     */
    async getIdeaStats(guild, user = null) {
        try {
            if (!config.ideaSubmission.channelId || config.ideaSubmission.channelId === 'YOUR_IDEA_CHANNEL_ID_HERE') {
                return null;
            }

            const ideaChannel = guild.channels.cache.get(config.ideaSubmission.channelId);
            if (!ideaChannel) return null;

            // Utols√≥ 100 √ºzenet lek√©r√©se
            const messages = await ideaChannel.messages.fetch({ limit: 100 });
            const ideaMessages = messages.filter(msg => 
                msg.embeds.length > 0 && 
                msg.embeds[0].title === config.ideaSubmission.embed.title
            );

            let stats = {
                totalIdeas: ideaMessages.size,
                totalReactions: 0,
                positiveReactions: 0,
                negativeReactions: 0
            };

            // Ha specifikus felhaszn√°l√≥ van megadva
            if (user) {
                const userIdeas = ideaMessages.filter(msg => 
                    msg.embeds[0].author && msg.embeds[0].author.name === user.tag
                );
                stats.userIdeas = userIdeas.size;
            }

            // Reakci√≥k sz√°mol√°sa
            ideaMessages.forEach(msg => {
                msg.reactions.cache.forEach(reaction => {
                    if (reaction.emoji.name === '‚úÖ') {
                        stats.positiveReactions += reaction.count - 1; // -1 mert a bot is reag√°lt
                    } else if (reaction.emoji.name === '‚ùå') {
                        stats.negativeReactions += reaction.count - 1;
                    }
                    stats.totalReactions += reaction.count - 1;
                });
            });

            return stats;

        } catch (error) {
            console.error('‚ùå Hiba az √∂tlet statisztik√°k lek√©r√©se sor√°n:', error);
            return null;
        }
    }
};
